name: ChatGPT Rewriter

on:
  pull_request:

jobs:
  chatgpt_rewriter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: |
          npm install -g recursive-readdir
          npm install openai recursive-readdir
      - name: Rewrite code using ChatGPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          const openai = require('openai');
          const recursive = require('recursive-readdir');
          const apiKey = process.env.OPENAI_API_KEY;
          const model = 'text-davinci-002';
          const languagePromptMap = {
            'js': 'Please rewrite my JavaScript code to the highest level of programming',
            'ts': 'Please rewrite my TypeScript code to the highest level of programming',
            'py': 'Please rewrite my Python code to the highest level of programming',
            // add more languages here as needed
          };
          const stopSequences = {
            'js': [';', '}'],
            'ts': [';', '}'],
            'py': [':', '\n'],
            // add more languages here as needed
          };
          recursive('.', (err, files) => {
            if (err) {
              throw err;
            }
            files.forEach((file) => {
              const fileExtension = file.split('.').pop();
              const languagePrompt = languagePromptMap[fileExtension];
              if (languagePrompt) {
                const stopSequence = stopSequences[fileExtension];
                const code = fs.readFileSync(file, 'utf8');
                const inputs = languagePrompt + '\n\nFile: ' + file + '\n\n' + code;
                const options = {
                  engine: 'davinci',
                  prompt: inputs,
                  maxTokens: 2048,
                  temperature: 0.9,
                  n: 1,
                  stream: false,
                  stop: stopSequence,
                };
                openai.completions.create(options, apiKey).then((result) => {
                  const rewrittenCode = result.choices[0].text.trim();
                  fs.writeFileSync(file, rewrittenCode);
                });
              }
            });
          });
      - name: Install Create Pull Request action
        uses: peter-evans/create-pull-request@v3.5.1
      - name: Create pull request for rewritten code
        uses: peter-evans/create-pull-request@v3.5.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Rewritten code by ChatGPT'
          title: 'Rewritten code by ChatGPT'
          body: 'This pull request contains rewritten code generated by the ChatGPT API.'
          branch: chatgpt-rewritten-code
          labels: 'Rewritten Code'
          branch-suffix: timestamp
