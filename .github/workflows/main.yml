name: ChatGPT Code Rewrite

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check if OpenAI API key is present
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "Secret for OpenAI API key is missing. Please set it up in the repository secrets." && exit 1
          fi
        shell: bash

  rewrite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install OpenAI and recursive-readdir
        run: |
          npm init -y
          npm install openai recursive-readdir
      - name: Rewrite code using ChatGPT
        run: |
          node <<EOF
          const openai = require('openai');
          const recursive = require('recursive-readdir');
          const fs = require('fs');
          const apiKey = process.env.OPENAI_API_KEY;
          const model = 'text-davinci-002';
          const languagePromptMap = {
            'js': 'Please rewrite my JavaScript code to the highest level of programming',
            'ts': 'Please rewrite my TypeScript code to the highest level of programming',
            'py': 'Please rewrite my Python code to the highest level of programming',
            // add more languages here as needed
          };
          const stopSequences = {
            'js': [';', '}'],
            'ts': [';', '}'],
            'py': [':', '\n'],
            // add more languages here as needed
          };
          recursive('.', (err, files) => {
            if (err) {
              throw err;
            }
            files.forEach((file) => {
              const fileExtension = file.split('.').pop();
              const languagePrompt = languagePromptMap[fileExtension];
              if (languagePrompt) {
                const stopSequence = stopSequences[fileExtension];
                const code = fs.readFileSync(file, 'utf8');
                const inputs = languagePrompt + '\n\nFile: ' + file + '\n\n' + code;
                const options = {
                  engine: 'davinci',
                  prompt: inputs,
                  maxTokens: 2048,
                  temperature: 0.9,
                  n: 1,
                  stream: false,
                  stop: stopSequence,
                };
                openai.completions.create(options, apiKey).then((result) => {
                  const rewrittenCode = result.choices[0].text.trim();
                  fs.writeFileSync(file, rewrittenCode);
                });
              }
            });
          });
          EOF
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Commit and push changes
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add -A
          git commit -m "Rewrite code using ChatGPT"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
